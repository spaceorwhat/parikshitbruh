#include "stm32f4xx.h"
int main()
{    
  //Enable the GPIOD clock
  RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD,ENABLE);  
    
  //GPIOD Configuration  
  GPIO_InitTypeDef GP;
  
  GP.GPIO_Pin=GPIO_Pin_12;
  GP.GPIO_Mode=GPIO_Mode_AF; //setting up GPIO pins to alternate functions mode for enabling pwm
  GP.GPIO_OType=GPIO_OType_PP;
  GP.GPIO_PuPd=GPIO_PuPd_UP;
  GP.GPIO_Speed=GPIO_Speed_100MHz;
  
  GPIO_Init(GPIOD,&GP);
  
  GPIO_PinAFConfig(GPIOD,GPIO_PinSource12,GPIO_AF_TIM4); //used to connect pin12 to tim4 alternate function
  
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);//enable clock pulse to timer
  TIM_TimeBaseInitTypeDef timeobject;//making timer object
  
  timeobject.TIM_Prescaler=0;; //Prescalar is zero since we need max frequency possible to make the transition smooth
  timeobject.TIM_CounterMode=TIM_CounterMode_Up;
  timeobject.TIM_Period=999; //timer max value is 1000-1
  timeobject.TIM_ClockDivision=TIM_CKD_DIV1;

  TIM_TimeBaseInit(TIM4,&timeobject);//initialize timer configurations

  TIM_OCInitTypeDef OCobject; //Making Output compare object
   
  OCobject.TIM_OCMode=TIM_OCMode_PWM1;
  OCobject.TIM_OutputState=TIM_OutputState_Enable; 
  OCobject.TIM_Pulse=0;
  OCobject.TIM_OCPolarity=TIM_OCPolarity_High;
  
  TIM_OC1Init(TIM4, &OCobject); //initialize Output Comapare1 configurations for pin12 using tim4
  
  TIM_OC1PreloadConfig(TIM4, TIM_OCPreload_Enable);
  
  TIM_Cmd(TIM4,ENABLE); //start time  

  uint16_t CCR1_Val = 0; //variable to store the changing pulse value in 
  
  while(1)
  {
    //increases brightness from 0% to 100%
    for (CCR1_Val=0;CCR1_Val<=999;CCR1_Val++){
      
      TIM_SetCompare1(TIM4,CCR1_Val); //Changing pulse value to change duty cycle
      for(int i=0;i<10000;i++); //causing delay to see the change in brightness
      
    }
    
    //decreases brightness from 100% to 0%
    for (CCR1_Val=999;CCR1_Val!=0;CCR1_Val--){
      
      TIM_SetCompare1(TIM4,CCR1_Val);//Changing pulse value to change duty cycle
      for(int j=0;j<10000;j++);  //causing delay to see the change in brightness
      
    }   
  };
  
  return 0;
}
